services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ocs_user
      POSTGRES_PASSWORD: ocs_pass
      POSTGRES_DB: ocs_portal
    ports:
      - "5433:5432" # Changed host port to 5433 to avoid conflict
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ocs_user -d ocs_portal"]
      interval: 5s
      timeout: 5s
      retries: 5

  ocs-tickets-api:
    build:
      context: .
      dockerfile: ocs-tickets-api/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://ocs_user:ocs_pass@db:5432/ocs_tickets
      - DB_HOST=db
      - DB_PORT=5432      - DB_USER=ocs_user
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "./healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3

  ocs-purchasing-api:
    build:
      context: .
      dockerfile: ocs-purchasing-api/Dockerfile
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://ocs_user:ocs_pass@db:5432/ocs_purchasing
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=ocs_user
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "./healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
  ocs-portal-py:
    build:
      context: .
      dockerfile: ocs-portal-py/Dockerfile
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://ocs_user:ocs_pass@db:5432/ocs_portal
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=ocs_user
    depends_on:
      db:
        condition: service_healthy

  ocs-manage-api:
    build:
      context: .
      dockerfile: ocs-manage/Dockerfile
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql://ocs_user:ocs_pass@db:5432/ocs_manage
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=ocs_user
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "./healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3

  ocs-forms-api:
    build:
      context: .
      dockerfile: ocs-forms-api/Dockerfile
    ports:
      - "8005:8000"
    environment:
      - DATABASE_URL=postgresql://ocs_user:ocs_pass@db:5432/ocs_forms
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=ocs_user
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "./healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgdata:
